name: Build Backend

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Download dependencies
      run: go mod download

    - name: Build for Linux
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o memos-linux-amd64 ./server/server.go
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -o memos-linux-arm64 ./server/server.go

    - name: Build for macOS
      run: |
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a -installsuffix cgo -o memos-darwin-amd64 ./server/server.go
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -a -installsuffix cgo -o memos-darwin-arm64 ./server/server.go

    - name: Build for Windows
      run: |
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -a -installsuffix cgo -o memos-windows-amd64.exe ./server/server.go
        CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -a -installsuffix cgo -o memos-windows-arm64.exe ./server/server.go

    - name: Create release archive
      run: |
        mkdir -p release
        tar -czf release/memos-linux-amd64.tar.gz memos-linux-amd64
        tar -czf release/memos-linux-arm64.tar.gz memos-linux-arm64
        tar -czf release/memos-darwin-amd64.tar.gz memos-darwin-amd64
        tar -czf release/memos-darwin-arm64.tar.gz memos-darwin-arm64
        zip release/memos-windows-amd64.zip memos-windows-amd64.exe
        zip release/memos-windows-arm64.zip memos-windows-arm64.exe

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: memos-binaries
        path: release/

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./server/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
